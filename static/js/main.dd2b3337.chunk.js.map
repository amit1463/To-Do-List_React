{"version":3,"sources":["components/input.js","components/Button.js","components/main.js","App.js","index.js"],"names":["Input","props","type","placeholder","value","val","onChange","change","Button","onClick","click","className","Main","useState","word","setWord","localStorage","getItem","JSON","parse","list","setlist","showEditModal","setShowEditModal","edit","setEdit","it","setIt","setLineThrough","event","target","classList","toggle","useEffect","setItem","stringify","e","length","prevItems","map","item","index","id","editOnOp","filter","cols","rows","newarr","console","log","App","ReactDOM","render","document","getElementById"],"mappings":"sRAceA,EAZD,SAACC,GAGX,OACE,mCAEC,uBAAOC,KAAK,OAAOC,YAAY,gBAAgBC,MAAOH,EAAMI,IAAKC,SAAUL,EAAMM,YCEzEC,G,YARA,SAACP,GACZ,OACI,mCACA,wBAAQQ,QAASR,EAAMS,MAAOC,UAAU,MAAxC,mBCwJOC,EA3IF,WAET,MAAuBC,mBAAS,IAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAuBF,mBAfZG,aAAaC,QAAQ,SAIrBC,KAAKC,MAAMH,aAAaC,QAAQ,UAGhC,IAQX,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAAyCR,oBAAS,GAAlD,mBAAOS,EAAP,KAAqBC,EAArB,KACA,EAAuBV,qBAAvB,mBAAOW,EAAP,KAAYC,EAAZ,KAuBA,EAAmBZ,qBAAnB,mBAAOa,EAAP,KAAUC,EAAV,KAgDMC,EAAe,SAACC,GAChBA,EAAMC,OAAOC,UAAUC,OAAO,iBAapC,OANAC,qBAAU,WACNjB,aAAakB,QAAQ,QAAQhB,KAAKiB,UAAUf,MAC9C,CAACA,IAKC,mCACA,sBAAKT,UAAU,OAAf,UACA,4CACA,sBAAKA,UAAU,UAAf,UACI,cAAC,EAAD,CAAON,IAAOS,EAAMP,OAxFT,SAAC6B,GAChBrB,EAAQqB,EAAEN,OAAO1B,UAwFb,cAAC,EAAD,CAAQM,MA/EC,WACVI,EAAKuB,OAAO,GACfhB,GAAQ,SAACiB,GAEL,MAAM,GAAN,mBAAWA,GAAX,CAAqBxB,OAI1BC,EAAQ,UAyEP,qBAAKJ,UAAU,WAAf,SAGQS,EAAKmB,KAAI,SAACC,EAAOC,GACb,OACI,sBAAiBC,GAAID,EAAO9B,UAAU,QAAtC,UAEI,qBAAMF,QAASmB,EAAgBjB,UAAU,OAAzC,SAAiD6B,IACjD,sBAAK7B,UAAU,aAAf,UACI,qBAAKF,QAAS,kBA7EzB,SAAC+B,EAAKC,GAEnBlB,GAAiB,GACjBE,EAAQe,GACRb,EAAMc,GAyEqCE,CAASH,EAAKC,IAAjC,SACI,mBAAG9B,UAAU,iBAEjB,qBAAKF,QAAS,kBA7CxBiC,EA6CqCD,OA5CrDpB,GAAQ,SAAAiB,GACJ,OAAOA,EAAUM,QAAO,SAACJ,EAAKC,GACzB,OAAOA,IAAQC,QAHT,IAACA,GA6CU,SACI,mBAAG/B,UAAU,+BARf8B,QAoBtBnB,EACA,qBAAKX,UAAU,SAAf,SAEC,sBAAKA,UAAU,QAAf,UACG,0BAAUR,YAAY,gBAAgBQ,UAAU,WAAWP,MAASoB,EAAMlB,SAnH/D,SAAC8B,GACpBX,EAAQW,EAAEN,OAAO1B,QAkH6FyC,KAAK,KAAKC,KAAK,MACrH,wBAAQrC,QAAW,iBAvFnB,KAAPe,IACAH,GAAQ,SAACiB,GACP,IAAIS,EAAS,GAYb,OAXAT,EAAUM,QAAO,SAACJ,EAAKC,GACdA,IAAQf,EACPqB,EAAOrB,GAAMF,EAGbuB,EAAON,GAASD,KAI1BQ,QAAQC,IAAIF,GACZC,QAAQC,IAAIX,GACLS,KAEVxB,GAAiB,SAGjBE,EAAQ,KAoEoCd,UAAU,OAA9C,uBAGJ,WCxIGuC,MARf,WACE,OACE,qBAAKvC,UAAU,MAAf,SACE,cAAC,EAAD,OCFNwC,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dd2b3337.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./input.css\"\r\nconst Input = (props)=>{\r\n    // const [state,setState] = useState();\r\n    \r\n    return (\r\n      <>\r\n\r\n       <input type=\"text\" placeholder=\"Enter task...\" value={props.val} onChange={props.change}></input>\r\n \r\n      </>\r\n    )\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport \"./Button.css\"\r\nconst Button = (props)=>{\r\n    return (\r\n        <>\r\n        <button onClick={props.click} className=\"btn\">+</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Button;","import React, { useState ,useEffect} from \"react\";\r\nimport Input from \"./input\";\r\nimport \"./main.css\";\r\nimport Button from \"./Button\";\r\n\r\nconst getLocalItems = ()=>{\r\n    let list = localStorage.getItem('lists');\r\n    // console.log(list);\r\n\r\n    if(list){\r\n        return JSON.parse(localStorage.getItem('lists'));\r\n    }\r\n    else{\r\n        return [];\r\n    }\r\n}\r\n\r\n\r\nconst Main = () =>{\r\n\r\n    const [word,setWord] = useState(\"\");\r\n    const [list,setlist] = useState(getLocalItems());\r\n    const [showEditModal,setShowEditModal] = useState(false);\r\n    const [edit,setEdit] = useState();\r\n\r\n    const handleChange=(e)=>{\r\n        setWord(e.target.value);//input.value\r\n        // console.log(word);\r\n    }\r\n\r\n    const handleEditChange=(e)=>{\r\n        setEdit(e.target.value);//input.value\r\n        // console.log(edit);\r\n    }\r\n    \r\n    const showList = ()=>{\r\n        if(word.length>0){\r\n        setlist((prevItems)=>{\r\n            // console.log([...prevItems,word]);\r\n            return [...prevItems,word]\r\n        });\r\n        \r\n       }\r\n       setWord(\"\");\r\n    }\r\n    \r\n    const [it,setIt] = useState();\r\n    // const [text,setText] = useState(\"\");\r\n    const editOnOp = (item,index)=>{\r\n        // e.preventDefault();\r\n        setShowEditModal(true);\r\n        setEdit(item);\r\n        setIt(index);\r\n        // return false;\r\n\r\n    }\r\n\r\n    const editOffOp = () =>{\r\n\r\n      if(edit!==\"\"){\r\n         setlist((prevItems)=>{\r\n           let newarr = []\r\n           prevItems.filter((item,index)=>{\r\n                 if(index===it){\r\n                     newarr[it] = edit;\r\n                 }\r\n                 else{\r\n                     newarr[index] = item;\r\n                 }\r\n               \r\n           })\r\n           console.log(newarr);\r\n           console.log(prevItems);\r\n           return newarr;\r\n        });\r\n        setShowEditModal(false);\r\n      }\r\n        \r\n        setEdit(\"\");\r\n    }\r\n\r\n\r\n\r\n    const deleteOp = (id)=>{\r\n      setlist(prevItems=>{\r\n          return prevItems.filter((item,index)=>{\r\n               return index!==id\r\n           })\r\n        })\r\n\r\n    }\r\n\r\n    // const [showlineEdit , setShowLineEdit] = useState(true);\r\n  \r\n    const setLineThrough=(event)=>{\r\n          event.target.classList.toggle(\"crossed-line\");  \r\n    }\r\n\r\n    // setShowLineEdit=(e)=>{\r\n    //     e.target.classList.toggle(\"show-pen\");\r\n    // }    \r\n    \r\n    useEffect(()=>{\r\n        localStorage.setItem('lists',JSON.stringify(list));\r\n    },[list])\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n        <div className=\"main\">\r\n        <h1>To-Do-List</h1> \r\n        <div className=\"btnList\">\r\n            <Input val = {word} change = {handleChange}/>\r\n            <Button click = {showList} />\r\n        </div>\r\n        <div className=\"itemList\">\r\n            {\r\n                \r\n                list.map((item , index) =>{\r\n                    return(\r\n                        <div key={index} id={index} className=\"items\">\r\n            \r\n                            <div  onClick={setLineThrough} className=\"text\">{item}</div>\r\n                            <div className=\"editDelete\">\r\n                                <div onClick={()=> editOnOp(item,index) }>\r\n                                    <i className=\"fas fa-pen\"></i>\r\n                                </div>\r\n                                <div onClick={()=>deleteOp(index)}>\r\n                                    <i className=\"fas fa-minus-square\"></i>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    )\r\n                })\r\n\r\n           }\r\n       </div>\r\n\r\n       {\r\n            showEditModal?(\r\n            <div className=\"editor\">\r\n            {/* <h1>{text}</h1> */}\r\n             <div className=\"child\">\r\n                <textarea placeholder=\"Add a task...\" className=\"can-edit\" value = {edit} onChange={handleEditChange} cols=\"30\" rows=\"3\"></textarea>\r\n                <button onClick = {()=>editOffOp()} className=\"btn2\">Save</button>\r\n             </div>\r\n            </div>\r\n          ):null\r\n       }\r\n\r\n       </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport './App.css';\nimport Main from \"./components/main\";\n\n// const element = <p>{}</p>\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}